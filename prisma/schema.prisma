//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum Permission {
    ALL
    CREATE
    READ
    UPDATE
    DELETE
}

model User {
    id String @id() @default(cuid())
    groups GroupUser[]
    posts PostUser[]
    postPermission Permission?
    groupPostPermission Permission? @ignore()
}

model Group {
    id String @id() @default(cuid())
    users GroupUser[]
    posts PostGroup[]
    postPermission Permission?
}

/// @@allow('all', group.users?[user == auth() && user.permission == ALL])
model GroupUser {
    id String @id() @default(cuid())
    group Group @relation(fields: [groupId], references: [id])
    groupId String
    user User @relation(fields: [userId], references: [id])
    userId String
    permission Permission

    @@unique([groupId, userId, permission])
}

/// @@deny('all', auth() == null)
/// @@allow('all', auth().postPermission == ALL)
/// @@allow('all', auth().groupPostPermission == ALL)
/// @@allow('all', users?[user == auth() && user.postPermission == ALL])
/// @@allow('all', groups?[group.users?[user == auth()] && group.postPermission == ALL])
model Post {
    id String @id() @default(cuid())
    groups PostGroup[]
    users PostUser[]
}

model PostGroup {
    id String @id() @default(cuid())
    group Group @relation(fields: [groupId], references: [id])
    groupId String
    post Post @relation(fields: [postId], references: [id])
    postId String
    permission Permission

    @@unique([groupId, postId, permission])
}

/// @@deny('all', auth() == null)
/// @@allow('all', user == auth() && user.postPermission == ALL)
model PostUser {
    id String @id() @default(cuid())
    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
    postId String
    user User @relation(fields: [userId], references: [id])
    userId String
    permission Permission

    @@unique([postId, userId, permission])
}